/*
Problem: Coin change
Beginners dsa sheet
*/

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
       long long int dp[1000][1000];
    
    long long int solve(int coins[], int N, int sum) {
        if (sum == 0)
            return 1;
        if (N == -1 || sum < 0)
            return 0;
        if (dp[N][sum] != -1)
            return dp[N][sum];
        
        dp[N][sum] = solve(coins, N, sum - coins[N]) + solve(coins, N - 1, sum);
        return dp[N][sum];
    }
    
    long long int count(int coins[], int N, int sum) {
        memset(dp, -1, sizeof(dp));
        return solve(coins, N - 1, sum);
    }

};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int sum, N;
        cin >> sum >> N;
        int coins[N];
        for (int i = 0; i < N; i++) cin >> coins[i];
        Solution ob;
        cout << ob.count(coins, N, sum) << endl;
    }

    return 0;
}


// } Driver Code Ends
